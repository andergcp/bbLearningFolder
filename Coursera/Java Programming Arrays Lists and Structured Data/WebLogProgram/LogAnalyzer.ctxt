#BlueJ class context
comment0.target=LogAnalyzer
comment1.params=
comment1.target=LogAnalyzer()
comment10.params=visitsPerIp
comment10.target=java.util.ArrayList\ iPsMostVisits(java.util.HashMap)
comment10.text=\n\ This\ method\ returns\ an\ ArrayList\ of\ Strings\ of\ IP\ addresses\ that\ all\n\ have\ the\ maximum\ number\ of\ visits\ to\ this\ website.\n
comment11.params=
comment11.target=java.util.HashMap\ iPsForDays()
comment11.text=\n\ This\ method\ returns\ a\ HashMap<String,\ ArrayList<String>>\ that\ uses\n\ records\ and\ maps\ days\ from\ web\ logs\ to\ an\ ArrayList\ of\ IP\ addresses\n\ that\ occurred\ on\ that\ day\ (including\ repeated\ IP\ addresses).\ A\ day\ is\n\ in\ the\ format\ \u201CMMM\ DD\u201D\ where\ MMM\ is\ the\ first\ three\ characters\ of\ the\n\ month\ name\ with\ the\ first\ letter\ capital\ and\ the\ others\ in\ lowercase,\n\ and\ DD\ is\ the\ day\ in\ two\ digits\ (examples\ are\ \u201CDec\ 05\u201D\ and\ \u201CApr\ 22\u201D).\n
comment12.params=ipsForDays
comment12.target=java.lang.String\ dayWithMostIPVisits(java.util.HashMap)
comment12.text=\n\ This\ method\ returns\ the\ day\ that\ has\ the\ most\ IP\ address\ visits.\n\ If\ there\ is\ a\ tie,\ then\ return\ any\ such\ day.\n
comment13.params=ipsForDays\ day
comment13.target=java.util.ArrayList\ iPsWithMostVisitsOnDay(java.util.HashMap,\ java.lang.String)
comment13.text=\n\ This\ method\ returns\ an\ ArrayList<String>\ of\ IP\ addresses\ that\ had\ the\n\ most\ accesses\ on\ the\ given\ day\n
comment2.params=filename
comment2.target=void\ readFile(java.lang.String)
comment3.params=
comment3.target=void\ printAll()
comment4.params=
comment4.target=int\ countUniqueIPs()
comment4.text=\n\ This\ method\ should\ return\ an\ integer\ representing\ the\ number\ of\ unique\n\ IP\ addresses.\ It\ should\ also\ assume\ that\ the\ instance\ variable\n\ records\ already\ has\ its\ ArrayList\ of\ Strings\ read\ in\ from\ a\ file,\n\ and\ should\ access\ records\ in\ computing\ this\ value.\n
comment5.params=num
comment5.target=void\ printAllHigherThanNum(int)
comment5.text=\n\ This\ method\ examines\ all\ the\ web\ log\ entries\ in\ records\ and\ print\n\ those\ LogEntrys\ that\ have\ a\ status\ code\ greater\ than\ num.\n
comment6.params=someday
comment6.target=java.util.ArrayList\ uniqueIPVisitsOnDay(java.lang.String)
comment6.text=\n\ This\ method\ has\ one\ String\ parameter\ named\ someday\ in\ the\ format\n\ \u201CMMM\ DD\u201D\ where\ MMM\ is\ the\ first\ three\ characters\ of\ the\ month\ name\n\ with\ the\ first\ letter\ capitalized\ and\ the\ others\ in\ lowercase,\ and\n\ DD\ is\ the\ day\ in\ two\ digits\ (examples\ are\ \u201CDec\ 05\u201D\ and\ \u201CApr\ 22\u201D).\n\ This\ method\ accesses\ the\ web\ logs\ in\ records\ and\ returns\ an\ ArrayList\n\ of\ Strings\ of\ unique\ IP\ addresses\ that\ had\ access\ on\ the\ given\ day.\n
comment7.params=low\ high
comment7.target=int\ countUniqueIPsInRange(int,\ int)
comment7.text=\n\ This\ method\ returns\ the\ number\ of\ unique\ IP\ addresses\ in\ records\ that\n\ have\ a\ status\ code\ in\ the\ range\ from\ low\ to\ high,\ inclusive.\n
comment8.params=
comment8.target=java.util.HashMap\ countVisitsPerIP()
comment8.text=\n\ This\ method\ returns\ a\ HashMap<String,\ Integer>\ that\ maps\ an\ IP\ address\n\ to\ the\ number\ of\ times\ that\ IP\ address\ appears\ in\ records,\ meaning\n\ the\ number\ of\ times\ this\ IP\ address\ visited\ the\ website.\n
comment9.params=visitsPerIp
comment9.target=int\ mostNumberVisitsByIP(java.util.HashMap)
comment9.text=\n\ \ This\ method\ returns\ the\ maximum\ number\ of\ visits\ to\ this\ website\ by\n\ \ a\ single\ IP\ address.\n
numComments=14
