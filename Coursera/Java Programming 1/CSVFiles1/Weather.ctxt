#BlueJ class context
comment0.target=Weather
comment1.params=first\ second
comment1.target=org.apache.commons.csv.CSVRecord\ findTheColdestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment1.text=\n\ Returns\ the\ record\ with\ lower\ temperature\n
comment10.params=
comment10.target=void\ testLowestHumidityInManyFiles()
comment11.params=parser
comment11.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment11.text=\n\ Returns\ a\ double\ that\ represents\ the\ average\ temperature\ in\ the\ file.\ \n
comment12.params=
comment12.target=void\ testAverageTemperatureInFile()
comment12.text=\n\ Tests\ averageTemperatureInFile()\ method\n
comment13.params=parser\ value
comment13.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment13.text=\n\ Returns\ a\ double\ that\ represents\ the\ average\ temperature\ of\ only\ those\n\ temperatures\ when\ the\ humidity\ was\ greater\ than\ or\ equal\ to\ value\n
comment14.params=
comment14.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment14.text=\n\ Tests\ averageTemperatureWithHighHumidityInFile()\n
comment2.params=parser
comment2.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment2.text=\n\ Returns\ the\ CSVRecord\ with\ the\ coldest\ temperature\ in\ the\ file\ and\ thus\n\ all\ the\ information\ about\ the\ coldest\ temperature,\ such\ as\ the\ hour\ of\n\ the\ coldest\ temperature.\ \n
comment3.params=
comment3.target=void\ testColdestHourInFile()
comment3.text=\n\ Tests\ couldestHourInFile\ method\n
comment4.params=
comment4.target=void\ fileWithColdestTemperature()
comment4.text=\n\ Returns\ a\ string\ that\ is\ the\ name\ of\ the\ file\ from\ selected\ files\ that\n\ has\ the\ coldest\ temperature,\ and\ aditional\ info\ from\ that\ day.\n
comment5.params=
comment5.target=void\ testFileWithColdestTemperature()
comment5.text=\n\ Tests\ fileWithColdestTemperature()\ method\n
comment6.params=first\ second
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment6.text=\n\ Returns\ the\ record\ with\ the\ lowest\ Humidity\n
comment7.params=parser
comment7.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment7.text=\n\ Returns\ the\ CSVRecord\ that\ has\ the\ lowest\ humidity.\n\ \ If\ there\ is\ a\ tie,\ then\ return\ the\ first\ such\ record\ that\ was\ found.\n
comment8.params=
comment8.target=void\ testLowestHumidityInFile()
comment8.text=\n\ Tests\ lowestHumidityInFile()\ method\n
comment9.params=
comment9.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
numComments=15
