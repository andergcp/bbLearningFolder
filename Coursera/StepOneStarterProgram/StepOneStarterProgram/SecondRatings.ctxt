#BlueJ class context
comment0.target=SecondRatings
comment1.params=
comment1.target=SecondRatings()
comment2.params=moviefile\ ratingsfile
comment2.target=SecondRatings(java.lang.String,\ java.lang.String)
comment3.params=
comment3.target=int\ getMovieSize()
comment3.text=\n\ Returns\ the\ number\ of\ movies\ that\ were\ read\ in\ and\ stored\ in\ the\ ArrayList\ of\ type\n\ Movie.\n
comment4.params=
comment4.target=int\ getRaterSize()
comment4.text=\n\ Returns\ the\ number\ of\ raters\ that\ were\ read\ in\ and\ stored\ in\ the\ ArrayList\ of\ type\n\ Rater.\n
comment5.params=id\ minimalRaters
comment5.target=double\ getAverageByID(java.lang.String,\ int)
comment5.text=\n\ This\ method\ returns\ a\ double\ representing\ the\ average\ movie\ rating\ for\ this\ ID\ if\n\ there\ are\ at\ least\ minimalRaters\ ratings.\ If\ there\ are\ not\ minimalRaters\ ratings,\n\ then\ it\ returns\ 0.0\n
comment6.params=minimalRaters
comment6.target=java.util.ArrayList\ getAverageRatings(int)
comment6.text=\n\ This\ method\ finds\ the\ average\ rating\ for\ every\ movie\ that\ has\ been\ rated\ by\ at\ least\n\ minimalRaters\ raters.\ Store\ each\ such\ rating\ in\ a\ Rating\ object\ in\ which\ the\ movie\n\ ID\ and\ the\ average\ rating\ are\ used\ in\ creating\ the\ Rating\ object.\ This\ method\ returns\n\ an\ ArrayList\ of\ all\ the\ Rating\ objects\ for\ movies\ that\ have\ at\ least\ the\ minimal\n\ number\ of\ raters\ supplying\ a\ rating\n
comment7.params=id
comment7.target=java.lang.String\ getTitle(java.lang.String)
comment7.text=\n\ This\ method\ returns\ the\ title\ of\ the\ movie\ with\ that\ ID.\ If\ the\ movie\ ID\ does\ not\n\ exist,\ then\ this\ method\ returns\ a\ String\ indicating\ the\ ID\ was\ not\ found.\n
comment8.params=title
comment8.target=java.lang.String\ getID(java.lang.String)
numComments=9
